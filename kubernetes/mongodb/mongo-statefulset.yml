# PENJELASAN
# - membuat sebuah StatefulSet dengan nama 'mongodb'
# - memiliki 1 pod (1 replica)
# - menggunakan Headless Service 'mongodb'
# - menghasilkan pod dengan label 'type:db'
# - image diambil dari Docker Hub, yaitu 'mongo:latest'
# - container diberikan environment variables, yaitu MONGO_INITDB_ROOT_USERNAME dan MONGO_INITDB_ROOT_PASSWORD
# - environment variable diperoleh dari /etc/mongo-credentials
# - container akan dipasang Persistent Volume dari /data/db
# - container akan dipasang ConfigMap dari /config

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      type: db
    serviceName: mongodb
    replicas: 1
    minReadySeconds: 10
    template:
      metadata:
        labels:
          type: db
      spec:
        terminationGracePeriodSeconds: 10
        containers:
          - image: mongo:latest
            name: mongodb
            env:
              - name: MONGO_INITDB_ROOT_USERNAME_FILE
                value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
              - name: MONGO_INITDB_ROOT_PASSWORD_FILE
                value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
            ports:
              - containerPort: 27017
                name: mongodb
            volumeMounts:
              - name: mongodb-persistent-storage
                mountPath: /data/db
              - name: mongodb-secret-mount
                mountPath: /etc/mongo-credentials
              - name: mongodb-config-mount
                mountPath: /config
                readOnly: true
        volumes:
          - name: mongodb-persistent-storage
            persistentVolumeClaim:
              claimName: mongodb-pv-claim
          - name: mongodb-secret-mount
            secret:
              secretName: mongodb-secret
          - name: mongodb-config-mount
            configMap:
              name: mongodb-config
              items:
                - key: mongo.conf
                  path: mongo.conf
